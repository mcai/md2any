#!/usr/bin/env python3
from docx.enum.text import WD_PARAGRAPH_ALIGNMENT
from docx.shared import Inches, Pt
from markdown2 import markdown_path
from bs4 import BeautifulSoup
from bs4.element import Tag
from docx import Document
from datetime import datetime as dt
from argparse import ArgumentParser


def convert(filename):
    output_html_file = filename + '.html'
    output_docx_file = filename + '.docx'

    html = markdown_path(filename, extras=['code-color', 'fenced-code-blocks', 'tables'])

    soup = BeautifulSoup(html, 'html.parser')

    with open(output_html_file, 'w', encoding='UTF-8') as o:
        o.write(soup.prettify())

    document = Document()

    style_indent = next(filter(lambda s: s.name == 'Normal', document.styles))
    paragraph_format = style_indent.paragraph_format
    paragraph_format.first_line_indent = Inches(0.25)
    paragraph_format.space_before = 1
    paragraph_format.line_spacing = 1.5
    paragraph_format.alignment = WD_PARAGRAPH_ALIGNMENT.JUSTIFY

    h2_i = 0
    h3_i = 0
    h4_i = 0
    h5_i = 0

    for c in soup.children:
        if type(c) is Tag:
            if c.name == 'h1':
                document.add_heading(c.text, 0)

                document.add_paragraph('最后更新: {}'.format(dt.now().strftime("%b %d %Y %H:%M:%S")))
            elif c.name == 'h2':
                h2_i += 1
                h3_i = 0
                document.add_page_break()
                document.add_heading('第{}章 {}'.format(h2_i, c.text), 1)
            elif c.name == 'h3':
                h3_i += 1
                h4_i = 0
                document.add_heading('{}.{} {}'.format(h2_i, h3_i, c.text), 2)
            elif c.name == 'h4':
                h4_i += 1
                h5_i = 0
                document.add_heading('{}.{}.{} {}'.format(h2_i, h3_i, h4_i, c.text), 3)
            elif c.name == 'h5':
                h5_i += 1
                document.add_heading('{}.{}.{}.{} {}'.format(h2_i, h3_i, h4_i, h5_i, c.text), 4)
            elif c.name == 'p':
                document.add_paragraph(c.text)
            elif c.name == 'ol':
                for i, li in enumerate(c.find_all('li')):
                    document.add_paragraph('{}. {}'.format(i + 1, li.text))
            elif c.name == 'ul':
                for li in c.find_all('li'):
                    document.add_paragraph('* {}'.format(li.text))
            else:
                document.add_paragraph('{} {}'.format(type(c), str(c)))

    document.save(output_docx_file)


if __name__ == '__main__':
    arg_parser = ArgumentParser()
    arg_parser.add_argument('md_file', type=str)

    args = arg_parser.parse_args()

    convert(args.md_file)
